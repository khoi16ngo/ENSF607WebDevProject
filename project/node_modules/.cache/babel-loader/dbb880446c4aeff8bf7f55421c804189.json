{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Khoi\\\\Desktop\\\\ENSF 607 - Software Design and Architecture I\\\\ENSF_607_Web_Dev_Project\\\\project\\\\src\\\\Pages\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Form, Col, Row, ListGroup, Modal, FormGroup } from 'react-bootstrap';\nimport './Home.css';\nimport LearningTable from './LearningTable.jsx';\nimport AttributeTable from './AttributeTable.jsx';\nimport GradeTable from './GradeTable.jsx';\nimport LetterGradeTable from './LetterGradeTable.jsx';\nexport default function Home({\n  state,\n  setState,\n  setIsCreated\n}) {\n  _s();\n\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [courseList, setCourseList] = useState([{\n    courseId: \"ENSF607\",\n    courseName: \"Software Design\",\n    courseDescription: \"A course to learn about software design.\",\n    hours: \"6\",\n    courseCredit: \"3\",\n    reference: \"www.google.ca\",\n    learningOutcomes: [{\n      id: 1,\n      value: \"Have a deep understanding, and practical knowledge of object oriented analysis, design, and development.\",\n      attribute: \"A3. Investigation\",\n      level: \"D (Developed)\"\n    }, {\n      id: 2,\n      value: \"Design and develop software programs in Java.\",\n      attribute: \"A4. Design\",\n      level: \"A (Applied)\"\n    }],\n    gradeComponents: [{\n      id: 1,\n      value: \"Assignments\",\n      learningOutcomes: \"1-7\",\n      weight: 50\n    }, {\n      id: 2,\n      value: \"Project\",\n      learningOutcomes: \"1-7\",\n      weight: 25\n    }, {\n      id: 3,\n      value: \"Midterm\",\n      learningOutcomes: \"1-7\",\n      weight: 25\n    }],\n    letterGrades: [{\n      id: 1,\n      letter: \"A+\",\n      from: \"95%\",\n      to: \"100%\"\n    }, {\n      id: 2,\n      letter: \"A\",\n      from: \"90%\",\n      to: \"95%\"\n    }, {\n      id: 3,\n      letter: \"A-\",\n      from: \"85%\",\n      to: \"90%\"\n    }, {\n      id: 4,\n      letter: \"B+\",\n      from: \"80%\",\n      to: \"85%\"\n    }, {\n      id: 5,\n      letter: \"B\",\n      from: \"75%\",\n      to: \"80%\"\n    }, {\n      id: 6,\n      letter: \"B-\",\n      from: \"70%\",\n      to: \"75%\"\n    }, {\n      id: 7,\n      letter: \"C+\",\n      from: \"65%\",\n      to: \"70%\"\n    }, {\n      id: 8,\n      letter: \"C\",\n      from: \"60%\",\n      to: \"65%\"\n    }, {\n      id: 9,\n      letter: \"C-\",\n      from: \"56%\",\n      to: \"60%\"\n    }, {\n      id: 10,\n      letter: \"D+\",\n      from: \"53%\",\n      to: \"56%\"\n    }, {\n      id: 11,\n      letter: \"D\",\n      from: \"50%\",\n      to: \"53%\"\n    }, {\n      id: 12,\n      letter: \"F\",\n      from: \"0%\",\n      to: \"50%\"\n    }]\n  }]); // useEffect(() => {\n  //     fetch('path/to/list/api')\n  //         .then((res) => res.json())\n  //         .then((res) => setCourseList(res))\n  // },[])\n\n  useEffect(() => {\n    console.log('selected Course', selectedCourse);\n  }, [selectedCourse]);\n  useEffect(() => {\n    console.log('courseList', courseList);\n  }, [courseList]);\n\n  const handleCourseClick = e => {\n    console.log(e);\n    setSelectedCourse({\n      data: e,\n      isNewCourse: false\n    });\n  };\n\n  const createCourseClick = e => {\n    console.log(e);\n    setSelectedCourse({\n      isNewCourse: true,\n      data: {\n        courseId: \"\",\n        courseName: \"\",\n        courseDescription: \"\",\n        hours: \"\",\n        courseCredit: \"\",\n        reference: \"\",\n        learningOutcomes: [],\n        gradeComponents: [],\n        letterGrades: [{\n          id: 1,\n          letter: \"A+\",\n          from: \"95%\",\n          to: \"100%\"\n        }, {\n          id: 2,\n          letter: \"A\",\n          from: \"90%\",\n          to: \"95%\"\n        }, {\n          id: 3,\n          letter: \"A-\",\n          from: \"85%\",\n          to: \"90%\"\n        }, {\n          id: 4,\n          letter: \"B+\",\n          from: \"80%\",\n          to: \"85%\"\n        }, {\n          id: 5,\n          letter: \"B\",\n          from: \"75%\",\n          to: \"80%\"\n        }, {\n          id: 6,\n          letter: \"B-\",\n          from: \"70%\",\n          to: \"75%\"\n        }, {\n          id: 7,\n          letter: \"C+\",\n          from: \"65%\",\n          to: \"70%\"\n        }, {\n          id: 8,\n          letter: \"C\",\n          from: \"60%\",\n          to: \"65%\"\n        }, {\n          id: 9,\n          letter: \"C-\",\n          from: \"56%\",\n          to: \"60%\"\n        }, {\n          id: 10,\n          letter: \"D+\",\n          from: \"53%\",\n          to: \"56%\"\n        }, {\n          id: 11,\n          letter: \"D\",\n          from: \"50%\",\n          to: \"53%\"\n        }, {\n          id: 12,\n          letter: \"F\",\n          from: \"0%\",\n          to: \"50%\"\n        }]\n      }\n    });\n  };\n\n  const handleSave = () => {\n    if (selectedCourse.isNewCourse) {\n      setCourseList([...courseList, selectedCourse.data]);\n    } else {\n      setCourseList(courseList.map(element => element.courseId === selectedCourse.data.courseId ? selectedCourse : element));\n    }\n\n    setSelectedCourse(null);\n  };\n\n  const handleDelete = () => {\n    // Todo: delete in backend\n    setCourseList(courseList.filter(element => element.courseId !== selectedCourse.data.courseId));\n    setSelectedCourse(null);\n  }; //----------------------------------------------------------------\n  // FOR LEARNING OUTCOME\n  //----------------------------------------------------------------\n\n\n  const handleDeleteOutcome = outcomeId => {\n    const outcomes = selectedCourse.data.learningOutcomes.filter(o => o.id !== outcomeId);\n\n    if (outcomes.length !== 0) {\n      let i = 1;\n      outcomes.map(o => o.id = i++);\n    }\n\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        learningOutcomes: outcomes\n      }\n    });\n  };\n\n  const handleSaveOutcome = outcome => {\n    const outcomes = [...selectedCourse.data.learningOutcomes];\n    const index = outcomes.indexOf(outcome);\n    if (index === -1) outcomes.push(outcome);else selectedCourse.data.learningOutcomes[index] = { ...outcome\n    };\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        learningOutcomes: outcomes\n      }\n    });\n  };\n\n  const handleSaveAttribute = outcome => {\n    const outcomes = [...selectedCourse.data.learningOutcomes];\n    const index = outcomes.indexOf(outcome);\n    console.log(outcome.attribute);\n    console.log(outcome.level);\n    selectedCourse.data.learningOutcomes[index] = { ...outcome\n    };\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        learningOutcomes: outcomes\n      }\n    });\n  }; //----------------------------------------------------------------\n  // FOR GRADE BREAKDOWN\n  //----------------------------------------------------------------\n\n\n  const handleDeleteGrade = compId => {\n    const comps = selectedCourse.data.gradeComponents.filter(o => o.id !== compId);\n\n    if (comps.length === 0) {\n      const temp = {\n        id: 1,\n        value: \"\",\n        learningOutcomes: \"\",\n        weight: \"\"\n      };\n      comps.push(temp);\n    } else {\n      let i = 1;\n      comps.map(o => o.id = i++);\n    }\n\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        gradeComponents: comps\n      }\n    });\n  };\n\n  const handleSaveGrade = comp => {\n    const comps = [...selectedCourse.data.gradeComponents];\n    const index = comps.indexOf(comp);\n\n    if (index === -1) {\n      comps.push(comp);\n      const temp = {\n        id: comp.id + 1,\n        value: \"\",\n        learningOutcomes: \"\",\n        weight: \"\"\n      };\n      comps.push(temp);\n    }\n\n    if (index === comps.length - 1) {\n      const temp = {\n        id: comp.id + 1,\n        value: \"\",\n        learningOutcomes: \"\",\n        weight: \"\"\n      };\n      comps.push(temp);\n    }\n\n    selectedCourse.data.gradeComponents[index] = { ...comp\n    };\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        gradeComponents: comps\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      children: courseList.map(course => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => handleCourseClick(course),\n        children: course.courseName\n      }, course.courseId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: selectedCourse !== null,\n      onHide: () => setSelectedCourse(null),\n      backdrop: \"static\",\n      size: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: selectedCourse && `${selectedCourse.isNewCourse ? 'Create' : 'Edit'} Course`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: selectedCourse && selectedCourse.data.courseId // value = {[selectedCourse.courseId}\n              ,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseId: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: selectedCourse && selectedCourse.data.courseName,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseName: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: selectedCourse && selectedCourse.data.courseDescription,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseDescription: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"Form.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Course Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              placeholder: \"select\",\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    hours: e.currentTarget.value\n                  }\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: selectedCourse && selectedCourse.data.hours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"Form.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Course Credits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              placeholder: selectedCourse && selectedCourse.data.courseCredit,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseCredit: e.currentTarget.value\n                  }\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: selectedCourse && selectedCourse.data.courseCredit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Reference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: selectedCourse && selectedCourse.data.reference,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    reference: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Learning Outcomes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 29\n            }, this), selectedCourse === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(LearningTable, {\n              outcomes: selectedCourse && selectedCourse.data.learningOutcomes,\n              onDelete: handleDeleteOutcome,\n              onSave: handleSaveOutcome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: selectedCourse === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(AttributeTable, {\n              outcomes: selectedCourse && selectedCourse.data.learningOutcomes,\n              onSave: handleSaveAttribute\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Grade Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), selectedCourse === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(GradeTable, {\n              comps: selectedCourse && selectedCourse.data.gradeComponents,\n              onDelete: handleDeleteGrade,\n              onSave: handleSaveGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Letter Grades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this), selectedCourse === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(LetterGradeTable, {\n              grades: selectedCourse && selectedCourse.data.letterGrades\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), selectedCourse && !selectedCourse.isNewCourse ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Hello on the main page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        variant: \"primary\",\n        onClick: () => {\n          createCourseClick();\n        },\n        children: \"Create Course Outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"rfY1qWJi97RuF+Z7SQX6ybRl0Dg=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/Khoi/Desktop/ENSF 607 - Software Design and Architecture I/ENSF_607_Web_Dev_Project/project/src/Pages/Home.js"],"names":["React","useState","useEffect","Button","Form","Col","Row","ListGroup","Modal","FormGroup","LearningTable","AttributeTable","GradeTable","LetterGradeTable","Home","state","setState","setIsCreated","selectedCourse","setSelectedCourse","courseList","setCourseList","courseId","courseName","courseDescription","hours","courseCredit","reference","learningOutcomes","id","value","attribute","level","gradeComponents","weight","letterGrades","letter","from","to","console","log","handleCourseClick","e","data","isNewCourse","createCourseClick","handleSave","map","element","handleDelete","filter","handleDeleteOutcome","outcomeId","outcomes","o","length","i","handleSaveOutcome","outcome","index","indexOf","push","handleSaveAttribute","handleDeleteGrade","compId","comps","temp","handleSaveGrade","comp","course","preventDefault","target","currentTarget"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport { Button, Form, Col, Row, ListGroup, Modal, FormGroup } from 'react-bootstrap';\r\nimport './Home.css'\r\nimport LearningTable from './LearningTable.jsx';\r\nimport AttributeTable from './AttributeTable.jsx';\r\nimport GradeTable from './GradeTable.jsx';\r\nimport LetterGradeTable from './LetterGradeTable.jsx';\r\n\r\nexport default function Home({ state, setState, setIsCreated }) {\r\n    const [selectedCourse, setSelectedCourse] = useState(null);\r\n    const [courseList, setCourseList] = useState([{\r\n        courseId: \"ENSF607\",\r\n        courseName: \"Software Design\",\r\n        courseDescription: \"A course to learn about software design.\",\r\n        hours: \"6\",\r\n        courseCredit: \"3\",\r\n        reference: \"www.google.ca\",\r\n        learningOutcomes: [\r\n            {id: 1, value: \"Have a deep understanding, and practical knowledge of object oriented analysis, design, and development.\", attribute: \"A3. Investigation\", level: \"D (Developed)\"},\r\n            {id: 2, value: \"Design and develop software programs in Java.\", attribute: \"A4. Design\", level: \"A (Applied)\"}\r\n        ],\r\n        gradeComponents: [\r\n            {id:1, value: \"Assignments\",learningOutcomes:\"1-7\",weight:50},\r\n            {id:2, value: \"Project\",learningOutcomes:\"1-7\",weight:25},\r\n            {id:3, value: \"Midterm\",learningOutcomes:\"1-7\",weight:25}\r\n        ],\r\n        letterGrades: [\r\n            {id:1,letter:\"A+\", from:\"95%\",to:\"100%\"},\r\n            {id:2,letter:\"A\", from:\"90%\",to:\"95%\"},\r\n            {id:3,letter:\"A-\", from:\"85%\",to:\"90%\"},\r\n            {id:4,letter:\"B+\", from:\"80%\",to:\"85%\"},\r\n            {id:5,letter:\"B\", from:\"75%\",to:\"80%\"},\r\n            {id:6,letter:\"B-\", from:\"70%\",to:\"75%\"},\r\n            {id:7,letter:\"C+\", from:\"65%\",to:\"70%\"},\r\n            {id:8,letter:\"C\", from:\"60%\",to:\"65%\"},\r\n            {id:9,letter:\"C-\", from:\"56%\",to:\"60%\"},\r\n            {id:10,letter:\"D+\", from:\"53%\",to:\"56%\"},\r\n            {id:11,letter:\"D\", from:\"50%\",to:\"53%\"},\r\n            {id:12,letter:\"F\", from:\"0%\",to:\"50%\"}\r\n        ]\r\n    }]);\r\n\r\n    // useEffect(() => {\r\n    //     fetch('path/to/list/api')\r\n    //         .then((res) => res.json())\r\n    //         .then((res) => setCourseList(res))\r\n    // },[])\r\n\r\n    useEffect(() => {\r\n        console.log('selected Course', selectedCourse)\r\n    }, [selectedCourse])\r\n\r\n    useEffect(() => {\r\n        console.log('courseList', courseList)\r\n    },[courseList])\r\n\r\n    const handleCourseClick = (e) => {\r\n        console.log(e)\r\n        setSelectedCourse({ data:e, isNewCourse: false })\r\n    }\r\n\r\n     const createCourseClick = (e) => {\r\n        console.log(e)\r\n        setSelectedCourse({isNewCourse : true, data:{\r\n        courseId: \"\",\r\n        courseName: \"\",\r\n        courseDescription: \"\",\r\n        hours: \"\",\r\n        courseCredit: \"\",\r\n        reference: \"\",\r\n        learningOutcomes: [],\r\n        gradeComponents: [],\r\n        letterGrades: [\r\n            {id:1,letter:\"A+\", from:\"95%\",to:\"100%\"},\r\n            {id:2,letter:\"A\", from:\"90%\",to:\"95%\"},\r\n            {id:3,letter:\"A-\", from:\"85%\",to:\"90%\"},\r\n            {id:4,letter:\"B+\", from:\"80%\",to:\"85%\"},\r\n            {id:5,letter:\"B\", from:\"75%\",to:\"80%\"},\r\n            {id:6,letter:\"B-\", from:\"70%\",to:\"75%\"},\r\n            {id:7,letter:\"C+\", from:\"65%\",to:\"70%\"},\r\n            {id:8,letter:\"C\", from:\"60%\",to:\"65%\"},\r\n            {id:9,letter:\"C-\", from:\"56%\",to:\"60%\"},\r\n            {id:10,letter:\"D+\", from:\"53%\",to:\"56%\"},\r\n            {id:11,letter:\"D\", from:\"50%\",to:\"53%\"},\r\n            {id:12,letter:\"F\", from:\"0%\",to:\"50%\"}\r\n        ]\r\n    }})\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (selectedCourse.isNewCourse) {\r\n            setCourseList([...courseList, selectedCourse.data])\r\n        } else {\r\n            setCourseList(courseList.map((element) => (element.courseId === selectedCourse.data.courseId)\r\n                ? selectedCourse : element));\r\n        }\r\n        setSelectedCourse(null);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        // Todo: delete in backend\r\n        setCourseList(courseList.filter((element) => element.courseId !== selectedCourse.data.courseId))\r\n        setSelectedCourse(null);\r\n    }\r\n\r\n    //----------------------------------------------------------------\r\n    // FOR LEARNING OUTCOME\r\n    //----------------------------------------------------------------\r\n    const handleDeleteOutcome = outcomeId => {\r\n        const outcomes = selectedCourse.data.learningOutcomes.filter(o => o.id !== outcomeId);\r\n        if(outcomes.length !== 0){\r\n            let i = 1;\r\n            outcomes.map(o => o.id = i++);\r\n        }\r\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, learningOutcomes: outcomes}});\r\n    };\r\n    const handleSaveOutcome = outcome => {\r\n        const outcomes = [...selectedCourse.data.learningOutcomes];\r\n        const index = outcomes.indexOf(outcome);\r\n        if(index === -1)\r\n            outcomes.push(outcome);\r\n        else\r\n            selectedCourse.data.learningOutcomes[index] = {...outcome};\r\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, learningOutcomes: outcomes}});\r\n    };\r\n    const handleSaveAttribute = outcome => {\r\n        const outcomes = [...selectedCourse.data.learningOutcomes];\r\n        const index = outcomes.indexOf(outcome);\r\n        console.log(outcome.attribute);\r\n        console.log(outcome.level);\r\n        selectedCourse.data.learningOutcomes[index] = {...outcome};\r\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, learningOutcomes: outcomes}});\r\n    };\r\n   \r\n    //----------------------------------------------------------------\r\n    // FOR GRADE BREAKDOWN\r\n    //----------------------------------------------------------------\r\n    const handleDeleteGrade = compId => {\r\n        const comps = selectedCourse.data.gradeComponents.filter(o => o.id !== compId);\r\n        if(comps.length === 0){\r\n            const temp = {id:1, value: \"\",learningOutcomes:\"\",weight:\"\"};\r\n            comps.push(temp);\r\n        }\r\n        else{\r\n            let i = 1;\r\n            comps.map(o => o.id = i++);\r\n        }\r\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, gradeComponents: comps}});\r\n    };\r\n    \r\n    const handleSaveGrade = comp => {\r\n        const comps = [...selectedCourse.data.gradeComponents];\r\n        const index = comps.indexOf(comp);\r\n        if(index === -1){\r\n            comps.push(comp);\r\n            const temp = {id:comp.id + 1, value: \"\",learningOutcomes:\"\",weight:\"\"};\r\n            comps.push(temp);\r\n        }\r\n        if(index === comps.length-1){\r\n            const temp = {id:comp.id + 1, value: \"\",learningOutcomes:\"\",weight:\"\"};\r\n            comps.push(temp);\r\n        }\r\n        selectedCourse.data.gradeComponents[index] = {...comp};\r\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, gradeComponents: comps}});\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <ListGroup>\r\n                {courseList.map((course) => (\r\n                    <ListGroup.Item\r\n                        key={course.courseId}\r\n                        onClick={() => handleCourseClick(course)}\r\n                    >\r\n                        {course.courseName}\r\n                </ListGroup.Item>))}\r\n            </ListGroup>\r\n            <Modal\r\n                show={selectedCourse !== null}\r\n                onHide={() => setSelectedCourse(null)}\r\n                backdrop=\"static\"\r\n                size=\"xl\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{selectedCourse &&`${selectedCourse.isNewCourse ? 'Create' : 'Edit' } Course`}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                       <Form.Group>\r\n                            <Form.Label>Course ID</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={selectedCourse && selectedCourse.data.courseId}\r\n                                    // value = {[selectedCourse.courseId}\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();    \r\n                                     setSelectedCourse({\r\n                                        isNewCourse: selectedCourse.isNewCourse,\r\n                                        data: { ...selectedCourse.data, courseId: e.target.value }\r\n                                    })\r\n                                }}                         \r\n                                />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Course Name</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={selectedCourse && selectedCourse.data.courseName}\r\n\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();    \r\n                                    setSelectedCourse({\r\n                                        isNewCourse: selectedCourse.isNewCourse,\r\n                                        data: { ...selectedCourse.data, courseName: e.target.value }\r\n                                    })\r\n                                }}                         \r\n                                />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Course Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3}\r\n                                placeholder={selectedCourse && selectedCourse.data.courseDescription}\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();    \r\n                                    setSelectedCourse({\r\n                                        isNewCourse: selectedCourse.isNewCourse,\r\n                                        data: { ...selectedCourse.data, courseDescription: e.target.value }\r\n                                    })\r\n                                }}         \r\n                                />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Form.ControlSelect1\">\r\n                            <Form.Label>Select Course Hours</Form.Label>\r\n                            <Form.Control as=\"select\" \r\n                                placeholder = \"select\"\r\n                                    onChange={(e) => {\r\n                                    e.preventDefault();    \r\n                                    setSelectedCourse({\r\n                                        isNewCourse: selectedCourse.isNewCourse,\r\n                                        data: { ...selectedCourse.data, hours: e.currentTarget.value }\r\n                                    })\r\n                                }}         \r\n                            >\r\n                                <option>{selectedCourse && selectedCourse.data.hours}</option>\r\n                                <option>3</option>\r\n                                <option>6</option>\r\n                                <option>9</option>\r\n                                <option>12</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Form.ControlSelect1\">\r\n                            <Form.Label>Select Course Credits</Form.Label>\r\n                            <Form.Control as=\"select\" \r\n                                    placeholder = {selectedCourse && selectedCourse.data.courseCredit}\r\n                                    onChange={(e) => {\r\n                                    e.preventDefault();    \r\n                                    setSelectedCourse({\r\n                                        isNewCourse: selectedCourse.isNewCourse,\r\n                                        data: { ...selectedCourse.data, courseCredit: e.currentTarget.value }\r\n                                    })\r\n                                }}         \r\n                            >\r\n                                <option>{selectedCourse && selectedCourse.data.courseCredit}</option>\r\n                                <option>3</option>\r\n                                <option>6</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                       <Form.Group>\r\n                            <Form.Label>Course Reference</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder={selectedCourse && selectedCourse.data.reference}\r\n\r\n                                onChange={(e) => {\r\n                                    e.preventDefault();    \r\n                                    setSelectedCourse({\r\n                                        isNewCourse: selectedCourse.isNewCourse,\r\n                                        data: { ...selectedCourse.data, reference: e.target.value }\r\n                                    })\r\n                                }}                         \r\n                                />\r\n                        </Form.Group>\r\n\r\n                        \r\n                        <FormGroup>\r\n                            <Form.Label>\r\n                                Learning Outcomes\r\n                            </Form.Label>\r\n                            {selectedCourse === null ? \r\n                                <div></div> : \r\n                                <LearningTable\r\n                                    outcomes = {selectedCourse && selectedCourse.data.learningOutcomes}\r\n                                    onDelete = {handleDeleteOutcome}\r\n                                    onSave = {handleSaveOutcome}\r\n                                />\r\n                            }\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            {selectedCourse === null ? \r\n                                <div></div> : \r\n                                <AttributeTable\r\n                                    outcomes = {selectedCourse && selectedCourse.data.learningOutcomes}\r\n                                    onSave = {handleSaveAttribute}\r\n                                />\r\n                            }\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Form.Label>\r\n                                Grade Breakdown\r\n                            </Form.Label>\r\n                            {selectedCourse === null ? \r\n                                <div></div> : \r\n                                <GradeTable\r\n                                    comps = {selectedCourse && selectedCourse.data.gradeComponents}\r\n                                    onDelete = {handleDeleteGrade}\r\n                                    onSave = {handleSaveGrade}\r\n                                />\r\n                            }\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Form.Label>\r\n                                Letter Grades\r\n                            </Form.Label>\r\n                            {selectedCourse === null ? \r\n                                <div></div> : \r\n                                <LetterGradeTable\r\n                                    grades = {selectedCourse && selectedCourse.data.letterGrades}\r\n                                />\r\n                            }\r\n                        </FormGroup>\r\n\r\n                    </Form>\r\n\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"success\" onClick={handleSave}>\r\n                        Save\r\n                    </Button>\r\n                    {selectedCourse && !selectedCourse.isNewCourse ?\r\n                        <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\r\n                        : null\r\n                    }\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <h1 className='title'>Hello on the main page</h1>\r\n\r\n                \r\n            \r\n            <div className='createButton'>\r\n             <Button\r\n                \r\n                type=\"button\"\r\n                variant=\"primary\"\r\n                onClick={() => {\r\n                    createCourseClick();\r\n                }}\r\n                > \r\n                Create Course Outline\r\n                </Button>\r\n            </div>    \r\n        </div>\r\n    )   \r\n}"]},"metadata":{},"sourceType":"module"}