{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/brendanmahler/Documents/UofC/ENSF607/web_design/ENSF_607_Web_Dev_Project/project/src/Pages/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Form, Col, Row, ListGroup, Modal, FormGroup } from 'react-bootstrap';\nimport './Home.css';\nimport LearningTable from './LearningTable.jsx';\nimport GradeTable from './GradeTable.jsx';\nexport default function Home({\n  state,\n  setState,\n  setIsCreated\n}) {\n  _s();\n\n  const [selectedCourse, setSelectedCourse] = useState(null);\n  const [courseList, setCourseList] = useState([{\n    courseId: \"ENSF607\",\n    courseName: \"Software Design\",\n    courseDescription: \"A course to learn about software design.\",\n    hours: \"6\",\n    courseCredit: \"3\",\n    reference: \"www.google.ca\",\n    learningOutcomes: [{\n      id: 1,\n      value: \"Have a deep understanding, and practical knowledge of object oriented analysis, design, and development.\"\n    }, {\n      id: 2,\n      value: \"Design and develop software programs in Java.\"\n    }, {\n      id: 3,\n      value: \"Define the concepts of object-oriented design, such as inheritance and polymorphism.\"\n    }, {\n      id: 4,\n      value: \"Design and develop client-server applications.\"\n    }],\n    gradeComponents: [{\n      id: 1,\n      value: \"Assignments\",\n      learningOutcomes: \"1-7\",\n      weight: 50\n    }, {\n      id: 2,\n      value: \"Project\",\n      learningOutcomes: \"1-7\",\n      weight: 25\n    }, {\n      id: 3,\n      value: \"Midterm\",\n      learningOutcomes: \"1-7\",\n      weight: 25\n    }]\n  }]); // useEffect(() => {\n  //     fetch('path/to/list/api')\n  //         .then((res) => res.json())\n  //         .then((res) => setCourseList(res))\n  // },[])\n\n  useEffect(() => {\n    console.log('selected Course', selectedCourse);\n  }, [selectedCourse]);\n  useEffect(() => {\n    console.log('courseList', courseList);\n  }, [courseList]);\n\n  const handleCourseClick = e => {\n    console.log(e);\n    setSelectedCourse({\n      data: e,\n      isNewCourse: false\n    });\n  };\n\n  const createCourseClick = e => {\n    console.log(e);\n    setSelectedCourse({\n      isNewCourse: true,\n      data: {\n        courseId: \"\",\n        courseName: \"\",\n        courseDescription: \"\",\n        hours: \"\",\n        courseCredit: \"\",\n        reference: \"\",\n        learningOutcomes: [],\n        gradeComponents: []\n      }\n    });\n  };\n\n  const handleSave = () => {\n    if (selectedCourse.isNewCourse) {\n      setCourseList([...courseList, selectedCourse.data]);\n    } else {\n      setCourseList(courseList.map(element => element.courseId === selectedCourse.data.courseId ? selectedCourse : element));\n    }\n\n    setSelectedCourse(null);\n  };\n\n  const handleDelete = () => {\n    // Todo: delete in backend\n    setCourseList(courseList.filter(element => element.courseId !== selectedCourse.data.courseId));\n    setSelectedCourse(null);\n  }; //----------------------------------------------------------------\n  // FOR LEARNING OUTCOME\n  //----------------------------------------------------------------\n\n\n  const handleDeleteOutcome = outcomeId => {\n    const outcomes = selectedCourse.data.learningOutcomes.filter(o => o.id !== outcomeId);\n\n    if (outcomes.length === 0) {\n      const temp = {\n        id: 1,\n        value: \"\"\n      };\n      outcomes.push(temp);\n    } else {\n      let i = 1;\n      outcomes.map(o => o.id = i++);\n    }\n\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        learningOutcomes: outcomes\n      }\n    });\n  };\n\n  const handleSaveOutcome = outcome => {\n    const outcomes = [...selectedCourse.data.learningOutcomes];\n    const index = outcomes.indexOf(outcome);\n\n    if (index === -1) {\n      outcomes.push(outcome);\n      const temp = {\n        id: outcome.id + 1,\n        value: \"\"\n      };\n      outcomes.push(temp);\n    }\n\n    if (index === outcomes.length - 1) {\n      const temp = {\n        id: outcome.id + 1,\n        value: \"\"\n      };\n      outcomes.push(temp);\n    }\n\n    selectedCourse.data.learningOutcomes[index] = { ...outcome\n    };\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        learningOutcomes: outcomes\n      }\n    });\n  }; //----------------------------------------------------------------\n  // FOR GRADE BREAKDOWN\n  //----------------------------------------------------------------\n\n\n  const handleDeleteGrade = compId => {\n    const comps = selectedCourse.data.gradeComponents.filter(o => o.id !== compId);\n\n    if (comps.length === 0) {\n      const temp = {\n        id: 1,\n        value: \"\",\n        learningOutcomes: \"\",\n        weight: \"\"\n      };\n      comps.push(temp);\n    } else {\n      let i = 1;\n      comps.map(o => o.id = i++);\n    }\n\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        gradeComponents: comps\n      }\n    });\n  };\n\n  const handleSaveGrade = comp => {\n    const comps = [...selectedCourse.data.gradeComponents];\n    const index = comps.indexOf(comp);\n\n    if (index === -1) {\n      comps.push(comp);\n      const temp = {\n        id: comp.id + 1,\n        value: \"\",\n        learningOutcomes: \"\",\n        weight: \"\"\n      };\n      comps.push(temp);\n    }\n\n    if (index === comps.length - 1) {\n      const temp = {\n        id: comp.id + 1,\n        value: \"\",\n        learningOutcomes: \"\",\n        weight: \"\"\n      };\n      comps.push(temp);\n    }\n\n    selectedCourse.data.gradeComponents[index] = { ...comp\n    };\n    setSelectedCourse({ ...selectedCourse,\n      data: { ...selectedCourse.data,\n        gradeComponents: comps\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n      children: courseList.map(course => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        onClick: () => handleCourseClick(course),\n        children: course.courseName\n      }, course.courseId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: selectedCourse !== null,\n      onHide: () => setSelectedCourse(null),\n      backdrop: \"static\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: selectedCourse && `${selectedCourse.isNewCourse ? 'Create' : 'Edit'} Course`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: selectedCourse && selectedCourse.data.courseId // value = {[selectedCourse.courseId}\n              ,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseId: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: selectedCourse && selectedCourse.data.courseName,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseName: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              rows: 3,\n              placeholder: selectedCourse && selectedCourse.data.courseDescription,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseDescription: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"Form.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Course Hours\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              placeholder: \"select\",\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    hours: e.currentTarget.value\n                  }\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: selectedCourse && selectedCourse.data.hours\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"12\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"Form.ControlSelect1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Select Course Credits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              placeholder: selectedCourse && selectedCourse.data.courseCredit,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    courseCredit: e.currentTarget.value\n                  }\n                });\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: selectedCourse && selectedCourse.data.courseCredit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Course Reference\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: selectedCourse && selectedCourse.data.reference,\n              onChange: e => {\n                e.preventDefault();\n                setSelectedCourse({\n                  isNewCourse: selectedCourse.isNewCourse,\n                  data: { ...selectedCourse.data,\n                    reference: e.target.value\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Learning Outcomes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 29\n            }, this), selectedCourse === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(LearningTable, {\n              outcomes: selectedCourse && selectedCourse.data.learningOutcomes,\n              onDelete: handleDeleteOutcome,\n              onSave: handleSaveOutcome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Grade Breakdown\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), selectedCourse === null ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(GradeTable, {\n              comps: selectedCourse && selectedCourse.data.gradeComponents,\n              onDelete: handleDeleteGrade,\n              onSave: handleSaveGrade\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 21\n        }, this), selectedCourse && !selectedCourse.isNewCourse ? /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Hello on the main page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"createButton\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        variant: \"primary\",\n        onClick: () => {\n          createCourseClick();\n        },\n        children: \"Create Course Outline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"uXSta06ZpcLgm1DDQRwoy6u3Dsc=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/brendanmahler/Documents/UofC/ENSF607/web_design/ENSF_607_Web_Dev_Project/project/src/Pages/Home.js"],"names":["React","useState","useEffect","Button","Form","Col","Row","ListGroup","Modal","FormGroup","LearningTable","GradeTable","Home","state","setState","setIsCreated","selectedCourse","setSelectedCourse","courseList","setCourseList","courseId","courseName","courseDescription","hours","courseCredit","reference","learningOutcomes","id","value","gradeComponents","weight","console","log","handleCourseClick","e","data","isNewCourse","createCourseClick","handleSave","map","element","handleDelete","filter","handleDeleteOutcome","outcomeId","outcomes","o","length","temp","push","i","handleSaveOutcome","outcome","index","indexOf","handleDeleteGrade","compId","comps","handleSaveGrade","comp","course","preventDefault","target","currentTarget"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { Button, Form, Col, Row, ListGroup, Modal, FormGroup } from 'react-bootstrap';\nimport './Home.css'\nimport LearningTable from './LearningTable.jsx';\nimport GradeTable from './GradeTable.jsx';\n\nexport default function Home({ state, setState, setIsCreated }) {\n    const [selectedCourse, setSelectedCourse] = useState(null);\n    const [courseList, setCourseList] = useState([{\n        courseId: \"ENSF607\",\n        courseName: \"Software Design\",\n        courseDescription: \"A course to learn about software design.\",\n        hours: \"6\",\n        courseCredit: \"3\",\n        reference: \"www.google.ca\",\n        learningOutcomes: [\n            {id: 1, value: \"Have a deep understanding, and practical knowledge of object oriented analysis, design, and development.\"},\n            {id: 2, value: \"Design and develop software programs in Java.\"},\n            {id: 3, value: \"Define the concepts of object-oriented design, such as inheritance and polymorphism.\"},\n            {id: 4, value: \"Design and develop client-server applications.\"}\n        ],\n        gradeComponents: [\n            {id:1, value: \"Assignments\",learningOutcomes:\"1-7\",weight:50},\n            {id:2, value: \"Project\",learningOutcomes:\"1-7\",weight:25},\n            {id:3, value: \"Midterm\",learningOutcomes:\"1-7\",weight:25}\n        ]\n    }]);\n\n    // useEffect(() => {\n    //     fetch('path/to/list/api')\n    //         .then((res) => res.json())\n    //         .then((res) => setCourseList(res))\n    // },[])\n\n    useEffect(() => {\n        console.log('selected Course', selectedCourse)\n    }, [selectedCourse])\n\n    useEffect(() => {\n        console.log('courseList', courseList)\n    },[courseList])\n\n    const handleCourseClick = (e) => {\n        console.log(e)\n        setSelectedCourse({ data:e, isNewCourse: false })\n    }\n\n     const createCourseClick = (e) => {\n        console.log(e)\n        setSelectedCourse({isNewCourse : true, data:{\n        courseId: \"\",\n        courseName: \"\",\n        courseDescription: \"\",\n        hours: \"\",\n        courseCredit: \"\",\n        reference: \"\",\n        learningOutcomes: [],\n        gradeComponents: []\n    }})\n    }\n\n    const handleSave = () => {\n        if (selectedCourse.isNewCourse) {\n            setCourseList([...courseList, selectedCourse.data])\n        } else {\n            setCourseList(courseList.map((element) => (element.courseId === selectedCourse.data.courseId)\n                ? selectedCourse : element));\n        }\n        setSelectedCourse(null);\n    }\n\n    const handleDelete = () => {\n        // Todo: delete in backend\n        setCourseList(courseList.filter((element) => element.courseId !== selectedCourse.data.courseId))\n        setSelectedCourse(null);\n    }\n\n    //----------------------------------------------------------------\n    // FOR LEARNING OUTCOME\n    //----------------------------------------------------------------\n    const handleDeleteOutcome = outcomeId => {\n        const outcomes = selectedCourse.data.learningOutcomes.filter(o => o.id !== outcomeId);\n        if(outcomes.length === 0){\n            const temp = {id:1, value: \"\"};\n            outcomes.push(temp);\n        }\n        else{\n            let i = 1;\n            outcomes.map(o => o.id = i++);\n        }\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, learningOutcomes: outcomes}});\n    };\n    const handleSaveOutcome = outcome => {\n        const outcomes = [...selectedCourse.data.learningOutcomes];\n        const index = outcomes.indexOf(outcome);\n        if(index === -1){\n            outcomes.push(outcome);\n            const temp = {id:outcome.id + 1, value: \"\"};\n            outcomes.push(temp);\n        }\n        if(index === outcomes.length-1){\n            const temp = {id:outcome.id + 1, value: \"\"};\n            outcomes.push(temp);\n        }\n        selectedCourse.data.learningOutcomes[index] = {...outcome};\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, learningOutcomes: outcomes}});\n    };\n   \n    //----------------------------------------------------------------\n    // FOR GRADE BREAKDOWN\n    //----------------------------------------------------------------\n    const handleDeleteGrade = compId => {\n        const comps = selectedCourse.data.gradeComponents.filter(o => o.id !== compId);\n        if(comps.length === 0){\n            const temp = {id:1, value: \"\",learningOutcomes:\"\",weight:\"\"};\n            comps.push(temp);\n        }\n        else{\n            let i = 1;\n            comps.map(o => o.id = i++);\n        }\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, gradeComponents: comps}});\n    };\n    \n    const handleSaveGrade = comp => {\n        const comps = [...selectedCourse.data.gradeComponents];\n        const index = comps.indexOf(comp);\n        if(index === -1){\n            comps.push(comp);\n            const temp = {id:comp.id + 1, value: \"\",learningOutcomes:\"\",weight:\"\"};\n            comps.push(temp);\n        }\n        if(index === comps.length-1){\n            const temp = {id:comp.id + 1, value: \"\",learningOutcomes:\"\",weight:\"\"};\n            comps.push(temp);\n        }\n        selectedCourse.data.gradeComponents[index] = {...comp};\n        setSelectedCourse({...selectedCourse, data: {...selectedCourse.data, gradeComponents: comps}});\n    };\n    \n    return (\n        <div>\n            <ListGroup>\n                {courseList.map((course) => (\n                    <ListGroup.Item\n                        key={course.courseId}\n                        onClick={() => handleCourseClick(course)}\n                    >\n                        {course.courseName}\n                </ListGroup.Item>))}\n            </ListGroup>\n            <Modal\n                show={selectedCourse !== null}\n                onHide={() => setSelectedCourse(null)}\n                backdrop=\"static\"\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>{selectedCourse &&`${selectedCourse.isNewCourse ? 'Create' : 'Edit' } Course`}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                       <Form.Group>\n                            <Form.Label>Course ID</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder={selectedCourse && selectedCourse.data.courseId}\n                                    // value = {[selectedCourse.courseId}\n                                onChange={(e) => {\n                                    e.preventDefault();    \n                                     setSelectedCourse({\n                                        isNewCourse: selectedCourse.isNewCourse,\n                                        data: { ...selectedCourse.data, courseId: e.target.value }\n                                    })\n                                }}                         \n                                />\n                        </Form.Group>\n\n                        <Form.Group>\n                            <Form.Label>Course Name</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder={selectedCourse && selectedCourse.data.courseName}\n\n                                onChange={(e) => {\n                                    e.preventDefault();    \n                                    setSelectedCourse({\n                                        isNewCourse: selectedCourse.isNewCourse,\n                                        data: { ...selectedCourse.data, courseName: e.target.value }\n                                    })\n                                }}                         \n                                />\n                        </Form.Group>\n\n\n                        <Form.Group>\n                            <Form.Label>Course Description</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3}\n                                placeholder={selectedCourse && selectedCourse.data.courseDescription}\n                                onChange={(e) => {\n                                    e.preventDefault();    \n                                    setSelectedCourse({\n                                        isNewCourse: selectedCourse.isNewCourse,\n                                        data: { ...selectedCourse.data, courseDescription: e.target.value }\n                                    })\n                                }}         \n                                />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"Form.ControlSelect1\">\n                            <Form.Label>Select Course Hours</Form.Label>\n                            <Form.Control as=\"select\" \n                                placeholder = \"select\"\n                                    onChange={(e) => {\n                                    e.preventDefault();    \n                                    setSelectedCourse({\n                                        isNewCourse: selectedCourse.isNewCourse,\n                                        data: { ...selectedCourse.data, hours: e.currentTarget.value }\n                                    })\n                                }}         \n                            >\n                                <option>{selectedCourse && selectedCourse.data.hours}</option>\n                                <option>3</option>\n                                <option>6</option>\n                                <option>9</option>\n                                <option>12</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"Form.ControlSelect1\">\n                            <Form.Label>Select Course Credits</Form.Label>\n                            <Form.Control as=\"select\" \n                                    placeholder = {selectedCourse && selectedCourse.data.courseCredit}\n                                    onChange={(e) => {\n                                    e.preventDefault();    \n                                    setSelectedCourse({\n                                        isNewCourse: selectedCourse.isNewCourse,\n                                        data: { ...selectedCourse.data, courseCredit: e.currentTarget.value }\n                                    })\n                                }}         \n                            >\n                                <option>{selectedCourse && selectedCourse.data.courseCredit}</option>\n                                <option>3</option>\n                                <option>6</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                       <Form.Group>\n                            <Form.Label>Course Reference</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder={selectedCourse && selectedCourse.data.reference}\n\n                                onChange={(e) => {\n                                    e.preventDefault();    \n                                    setSelectedCourse({\n                                        isNewCourse: selectedCourse.isNewCourse,\n                                        data: { ...selectedCourse.data, reference: e.target.value }\n                                    })\n                                }}                         \n                                />\n                        </Form.Group>\n\n                        \n                        <FormGroup>\n                            <Form.Label>\n                                Learning Outcomes\n                            </Form.Label>\n                            {selectedCourse === null ? \n                                <div></div> : \n                                <LearningTable\n                                    outcomes = {selectedCourse && selectedCourse.data.learningOutcomes}\n                                    onDelete = {handleDeleteOutcome}\n                                    onSave = {handleSaveOutcome}\n                                />\n                            }\n                        </FormGroup>\n\n                        <FormGroup>\n                            <Form.Label>\n                                Grade Breakdown\n                            </Form.Label>\n                            {selectedCourse === null ? \n                                <div></div> : \n                                <GradeTable\n                                    comps = {selectedCourse && selectedCourse.data.gradeComponents}\n                                    onDelete = {handleDeleteGrade}\n                                    onSave = {handleSaveGrade}\n                                />\n                            }\n                        </FormGroup>\n\n                    </Form>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"success\" onClick={handleSave}>\n                        Save\n                    </Button>\n                    {selectedCourse && !selectedCourse.isNewCourse ?\n                        <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\n                        : null\n                    }\n                </Modal.Footer>\n            </Modal>\n            <h1 className='title'>Hello on the main page</h1>\n\n                \n            \n            <div className='createButton'>\n             <Button\n                \n                type=\"button\"\n                variant=\"primary\"\n                onClick={() => {\n                    createCourseClick();\n                }}\n                > \n                Create Course Outline\n                </Button>\n            </div>    \n        </div>\n    )   \n}"]},"metadata":{},"sourceType":"module"}