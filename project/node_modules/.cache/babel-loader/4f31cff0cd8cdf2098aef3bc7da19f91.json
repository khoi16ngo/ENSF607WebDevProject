{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brendanmahler/Documents/UofC/ENSF607/web_design/ENSF_607_Web_Dev_Project/project/src/components/modal.js\";\nimport React from 'react';\nimport { Button, Form, Modal, FormGroup } from 'react-bootstrap';\nexport const CustomModal = (setCourseList, courseList, selectedCourse, setSelectedCourse) => {\n  const handleSave = () => {\n    setCourseList(courseList.map(element => element.courseId === selectedCourse.courseId ? selectedCourse : element));\n    setSelectedCourse(null);\n  };\n\n  const handleDelete = () => {\n    // delete in backend\n    setCourseList(courseList.filter(element => element.courseId !== selectedCourse.courseId));\n    setSelectedCourse(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: selectedCourse !== null,\n    onHide: () => setSelectedCourse(null),\n    backdrop: \"static\" // keyboard={false}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Modal title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          onSubmit: e => {\n            e.preventDefault();\n            console.log(e);\n          },\n          children: selectedCourse && Object.entries(selectedCourse).map(([key, value]) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              placeholder: value,\n              title: key,\n              disabled: key === 'courseId',\n              onChange: e => {\n                setSelectedCourse({ ...selectedCourse,\n                  [key]: e.target.value\n                });\n              }\n            }, `modal-${key}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), \"I will not close if you click outside me. Don't even try to press escape key.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleDelete,\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_c = CustomModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomModal\");","map":{"version":3,"sources":["/Users/brendanmahler/Documents/UofC/ENSF607/web_design/ENSF_607_Web_Dev_Project/project/src/components/modal.js"],"names":["React","Button","Form","Modal","FormGroup","CustomModal","setCourseList","courseList","selectedCourse","setSelectedCourse","handleSave","map","element","courseId","handleDelete","filter","e","preventDefault","console","log","Object","entries","key","value","target"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,SAA9B,QAA+C,iBAA/C;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,aAAD,EAAgBC,UAAhB,EAA4BC,cAA5B,EAA4CC,iBAA5C,KAAkE;AACxF,QAAMC,UAAU,GAAG,MAAM;AACtBJ,IAAAA,aAAa,CAACC,UAAU,CAACI,GAAX,CAAgBC,OAAD,IAAcA,OAAO,CAACC,QAAR,KAAqBL,cAAc,CAACK,QAArC,GACpCL,cADoC,GACnBI,OADT,CAAD,CAAb;AAEAH,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAJA;;AAMD,QAAMK,YAAY,GAAG,MAAM;AACvB;AACAR,IAAAA,aAAa,CAACC,UAAU,CAACQ,MAAX,CAAmBH,OAAD,IAAaA,OAAO,CAACC,QAAR,KAAqBL,cAAc,CAACK,QAAnE,CAAD,CAAb;AACAJ,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAJD;;AAKA,sBACI,QAAC,KAAD;AACQ,IAAA,IAAI,EAAED,cAAc,KAAK,IADjC;AAEQ,IAAA,MAAM,EAAE,MAAMC,iBAAiB,CAAC,IAAD,CAFvC;AAGQ,IAAA,QAAQ,EAAC,QAHjB,CAIQ;AAJR;AAAA,4BAMQ,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,WAAW,MAAzB;AAAA,6BACI,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YANR,eASQ,QAAC,KAAD,CAAO,IAAP;AAAA,8BACI,QAAC,IAAD;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGO,CAAD,IAAO;AACxBA,YAAAA,CAAC,CAACC,cAAF;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACH,WAHD;AAAA,oBAICR,cAAc,IAAIY,MAAM,CAACC,OAAP,CAAeb,cAAf,EAA+BG,GAA/B,CAAmC,CAAC,CAACW,GAAD,EAAMC,KAAN,CAAD,kBAClD;AAAA,oCACI,QAAC,IAAD,CAAM,KAAN;AAAA,wBAAaD;AAAb;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEA,QAAC,IAAD,CAAM,OAAN;AAEI,cAAA,WAAW,EAAEC,KAFjB;AAGQ,cAAA,KAAK,EAAED,GAHf;AAIQ,cAAA,QAAQ,EAAEA,GAAG,KAAK,UAJ1B;AAKI,cAAA,QAAQ,EAAGN,CAAD,IAAO;AACbP,gBAAAA,iBAAiB,CAAC,EAAC,GAAGD,cAAJ;AAAoB,mBAACc,GAAD,GAAMN,CAAC,CAACQ,MAAF,CAASD;AAAnC,iBAAD,CAAjB;AACH;AAPL,eACU,SAAQD,GAAI,EADtB;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA,0BADe;AAJnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATR,eAqCQ,QAAC,KAAD,CAAO,MAAP;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,OAAO,EAAEZ,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAA0B,QAAA,OAAO,EAAEI,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YArCR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CA3DM;KAAMT,W","sourcesContent":["import React from 'react';\nimport { Button, Form, Modal, FormGroup } from 'react-bootstrap';\n\nexport const CustomModal = (setCourseList, courseList, selectedCourse, setSelectedCourse) => {\n     const handleSave = () => {\n        setCourseList(courseList.map((element) => (element.courseId === selectedCourse.courseId)\n            ? selectedCourse : element));\n        setSelectedCourse(null);\n    }\n\n    const handleDelete = () => {\n        // delete in backend\n        setCourseList(courseList.filter((element) => element.courseId !== selectedCourse.courseId))\n        setSelectedCourse(null);\n    }\n    return (\n        <Modal\n                show={selectedCourse !== null}\n                onHide={() => setSelectedCourse(null)}\n                backdrop=\"static\"\n                // keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Modal title</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form>\n                        <FormGroup onSubmit={(e) => {\n                            e.preventDefault();\n                            console.log(e)\n                        }}>\n                        {selectedCourse && Object.entries(selectedCourse).map(([key, value]) => (\n                            <>\n                                <Form.Label>{key}</Form.Label>\n                            <Form.Control\n                                key={`modal-${key}`}\n                                placeholder={value}\n                                    title={key}\n                                    disabled={key === 'courseId'}\n                                onChange={(e) => {\n                                    setSelectedCourse({...selectedCourse, [key]:e.target.value})\n                                }}\n                                />\n                                </>\n             \n                        ))}\n                    </FormGroup>\n                    </Form>\n\n           \n                    I will not close if you click outside me. Don't even try to press\n                    escape key.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleSave}>\n                        Save\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleDelete}>Delete</Button>\n                </Modal.Footer>\n            </Modal>\n    \n    )\n}"]},"metadata":{},"sourceType":"module"}